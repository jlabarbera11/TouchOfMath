/*rules = [ 
misc ramblings:
[ ['a','=','b'], ['b', '=', 'a'] ],
[ ['-a','=','b'], ['a', '=', '-b'] ],

[ ['a','+','b'], ['b', '+', 'a'] ],
[ ['a','+','0'], [null, 'a', null] ],
[ ['a','-','a'], [null, 0, null] ],
[ ['a','-','b'], ['a', '+', '-b'] ],
[ ['a','=','b'], ['a','-','b','=',0]],
[ ['a','=','-b'], ['a','+','b','=',0]],

] */

rules = 
[
//  #op, match form, >> ,   theNew expression
  [ ['L','=','R'], ">>", ['R', '=', 'L'] ],
  [ [['0','-','L'],'=','R'], ">>", ['L', '=', ['0','-','R']] ],

  [ ['L','+','R'], ">>", ['R', '+', 'L'] ],
//  [ ['L','+','0'], ">>", [null, 'L', null] ],

//   [ ['L','=','R'], ">>", [['L','-','R'],'=','0']], //this grows

  [ ['L','=',['RL','+','RR']], '>>', [['L','-','RL'],'=','RR']],
  [ [['LL','+','LR'],'=','R'], '>>', ['LL','=',['R','-','LR']]],
  
  //rotation, this is key
  [ ['L','=',['RL','+',['RRL','+','RRR']]], '>>', ['L','=',['RRR','+',['RRL','+','RL']]]],
  //and for a negative
  [ ['L','=',['RL','+',['RRL','-','RRR']]], '>>', ['L','=',['RRR','+',['RRL','-','RL']]]],
  
]